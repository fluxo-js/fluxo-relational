{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 6d31623d9722fa522009","webpack:///./src/fluxo_relational.js","webpack:///external {\"amd\":\"fluxo\",\"commonjs\":\"fluxo-js\",\"root\":\"Fluxo\"}"],"names":[],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yBAAyB;;AAEzB;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA,oCAAoC,QAAQ;AAC5C;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL,qBAAqB,+BAA+B;AACpD;;AAEA,sDAAsD,gBAAgB;AACtE,GAAG;;AAEH;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA,2DAA2D,IAAI,cAAc;AAC7E,GAAG;;AAEH;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,oCAAoC;AACpC;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED,sCAAsC,2BAA2B;;;;;;;ACrIjE,+C","file":"fluxo_relational.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(undefined));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"fluxo\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Fluxo\"] = factory(require(\"fluxo-js\"));\n\telse\n\t\troot[\"Fluxo\"] = factory(root[\"Fluxo\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 6d31623d9722fa522009\n **/","var Fluxo = require(\"fluxo\"),\n    Relational = {};\n\nvar isObject = function(obj) {\n  var type = typeof obj;\n  return type === \"function\" || type === \"object\" && !!obj;\n};\n\nRelational.Base = {\n  create: function () {\n    var extensions = Array.prototype.slice.call(arguments);\n\n    extensions.unshift({}, this);\n\n    var extension = Fluxo.extend.apply(null, extensions);\n\n    return extension;\n  },\n\n  parse: function (newValue) {\n    if (!isObject(newValue) && newValue !== []) {\n      this.cancelListening();\n      this.currentValue = newValue;\n    } else if (this.currentValue && !newValue._fluxo) {\n      this.update(newValue);\n    } else if (newValue._fluxo) {\n      this.currentValue = newValue;\n      this.setupListening();\n    } else {\n      this.currentValue = this.createStore(newValue);\n      this.setupListening();\n    }\n\n    return this.currentValue;\n  },\n\n  cancelListening: function () {\n    if (!this.changeEventCanceler) { return; }\n    this.changeEventCanceler.call();\n    delete this.changeEventCanceler;\n  },\n\n  setupListening: function() {\n    this.cancelListening();\n\n    var onStoreEvent = function(eventName) {\n      var args = Array.prototype.slice.call(arguments, 1);\n\n      args.unshift((this.key + \":\" + eventName));\n\n      this.store.triggerEvent.apply(this.store, args);\n    };\n\n    this.changeEventCanceler = this.currentValue.on([\"*\"], onStoreEvent.bind(this));\n  }\n};\n\nRelational.HasMany = Relational.Base.create({\n  relationName: \"HasMany\",\n\n  createStore: function (value) {\n    var storeObject;\n\n    if (this.collectionObject) {\n      storeObject = this.collectionObject;\n    } else {\n      storeObject = { store: (this.storeObject || {}) };\n    }\n\n    return Fluxo.CollectionStore.create(storeObject, { stores: value });\n  },\n\n  update: function (value) {\n    this.currentValue.setStores(value);\n  }\n});\n\nRelational.HasOne = Relational.Base.create({\n  relationName: \"HasOne\",\n\n  createStore: function (value) {\n    return Fluxo.ObjectStore.create((this.storeObject || {}), { data: value });\n  },\n\n  update: function (value) {\n    this.currentValue.set(value);\n  }\n});\n\nRelational.ObjectStore = Fluxo.ObjectStore.create({\n  setup: function () {\n    this.relations = Fluxo.extend({}, this.relations);\n    this.parseRelations();\n    Fluxo.ObjectStore.setup.apply(this, arguments);\n  },\n\n  parseRelations: function() {\n    for (var relationKey in this.relations) {\n      var relation = this.relations[relationKey];\n\n      this.relations[relationKey] =\n        relation.type.create({\n          key: relationKey,\n          store: this\n        }, relation);\n    }\n  },\n\n  setAttribute: function(attribute, value, options) {\n    var relation = this.relations[attribute];\n\n    if (relation) {\n      value = relation.parse(value);\n    }\n\n    return Fluxo.ObjectStore.setAttribute.call(this, attribute, value, options);\n  },\n\n  toJSON: function() {\n    var json = Fluxo.ObjectStore.toJSON.call(this);\n\n    for (var attributeName in json) {\n      var value = json[attributeName];\n\n      if (typeof value.toJSON === \"function\") {\n        json[attributeName] = value.toJSON();\n      }\n    }\n\n    return json;\n  }\n});\n\nmodule.exports = Fluxo.extend(Fluxo, { \"Relational\": Relational });\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/fluxo_relational.js\n ** module id = 0\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"amd\":\"fluxo\",\"commonjs\":\"fluxo-js\",\"root\":\"Fluxo\"}\n ** module id = 1\n ** module chunks = 0\n **/"],"sourceRoot":""}